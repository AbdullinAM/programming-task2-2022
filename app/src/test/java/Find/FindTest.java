/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package Find;

import org.junit.jupiter.api.Test;

import java.util.ArrayList;

import static org.junit.jupiter.api.Assertions.*;

class FindTest {
    @Test
    public void testNormalUsage() {
        String resourcesDir = System.getProperty("user.dir") + "\\src\\test\\resources";

        /*With Extension + recursive*/
        String[] t1 = new Finder(resourcesDir, "One.txt", true).initSearch();
        String[] t2 = {resourcesDir + "\\Dir\\One.txt",
                resourcesDir + "\\Dir\\Deeper\\One.txt",
                resourcesDir + "\\Dir\\Deeper\\Deepest\\One.txt"};
        assertEquals(t1.length, t2.length);
        for (int i = 0; i < t1.length; i++) {
            assertEquals(t1[i], t2[i]);
        }

        /*Without Extension + recursive*/
        String[] t3 = new Finder(resourcesDir, "One", true).initSearch();
        String[] t4 = {resourcesDir + "\\Dir\\One.txt",
                resourcesDir + "\\Dir\\Deeper\\One",
                resourcesDir + "\\Dir\\Deeper\\One.txt",
                resourcesDir + "\\Dir\\Deeper\\Deepest\\One.txt"};
        assertEquals(t3.length, t4.length);
        for (int i = 0; i < t3.length; i++) {
            assertEquals(t3[i], t4[i]);
        }

        /*With Extension*/
        String[] t5 = new Finder(resourcesDir + "\\Dir", "Multiple.txt", false).initSearch();
        String[] t6 = {resourcesDir + "\\Dir\\Multiple.txt"};
        assertEquals(t5.length, t6.length);
        for (int i = 0; i < t5.length; i++) {
            assertEquals(t5[i], t6[i]);
        }

        /*Without Extension*/
        String[] t7 = new Finder(resourcesDir + "\\Dir", "Multiple", false).initSearch();
        String[] t8 = {resourcesDir + "\\Dir\\Multiple",
                resourcesDir + "\\Dir\\Multiple.txt",
                resourcesDir + "\\Dir\\Multiple.zip"};
        assertEquals(t7.length, t8.length);
        for (int i = 0; i < t7.length; i++) {
            assertEquals(t7[i], t8[i]);
        }
    }


    @Test
    public void testExceptions (){
        /*Wrong dir name*/
        IllegalArgumentException thrown = assertThrows(
                IllegalArgumentException.class,
                () -> new Finder("QWERTY", "1", false).initSearch(),
                "Expected doThing() to throw, but it didn't"
        );

        assertTrue(thrown.getMessage().contains("No such directory or directory is empty."));
    }
}
