/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package programming.task2;

import org.junit.jupiter.api.*;
import org.kohsuke.args4j.CmdLineException;
import org.kohsuke.args4j.CmdLineParser;

import java.io.IOException;

import static org.junit.jupiter.api.Assertions.*;

class TailTest {
    //проверка кол-ва строк
    @Test
    public void lastStringsTest() throws IOException {
        String string = """
                Vanya\r
                bought\r
                melon""";
        String space = """
                This\r
                \r
                is\r
                melon""";
        Tail tail = new Tail();
        assertEquals("bought\r\nmelon", tail.TailStrings(string, 2));
        assertEquals("melon", tail.TailStrings(string, 1));
        assertEquals("\r\nis\r\nmelon", tail.TailStrings(space, 3));
    }
    //проверка кол-ва символов
    @Test
    public void lastSymbolsTest() throws IOException {
        String string = """
                Vanya\r
                bought\r
                melon""";
        String space = """
                This\r
                \r
                is\r
                melon""";
        Tail tail = new Tail();
        assertEquals("melon", tail.TailSymbols(string, 5));
        assertEquals("tmelon", tail.TailSymbols(string, 6));
        assertEquals("sismelon", tail.TailSymbols(space, 8));
        assertEquals("ismelon", tail.TailSymbols(space, 7));
    }
    //readFile
    @Test
    public void readFileTest() throws IOException {
        String string = """
                Vanya\r
                bought\r
                melon""";
        TailLauncher tail = new TailLauncher();
        assertEquals(string, tail.readFile("src/test/resources/expected1.txt"));
    }
    //writeFile
    @Test
    public void writeFileTest() throws IOException {
        String string = """
                Vanya\r
                bought\r
                melon""";
        TailLauncher tail = new TailLauncher();
        tail.writeFile(string, "src/test/resources/output1.txt");
        assertEquals(tail.readFile("src/test/resources/expected1.txt"), tail.readFile("src/test/resources/output1.txt"));
    }

    @Test
    public void tailSymbolsTest() throws IOException {
        String cmd = "-c 5 -o src/test/resources/output2.txt src/test/resources/input2.txt";
        String expected = "src/test/resources/expected2.txt";
        String actual = "src/test/resources/output2.txt";
        TailLauncher.main(cmd.split(" "));
        TailLauncher tail = new TailLauncher();
        assertEquals(tail.readFile(expected), tail.readFile(actual));
    }

    @Test
    public void tailStringsTest() throws IOException {
        String cmd = "-n 3 -o src/test/resources/output3.txt src/test/resources/input3.txt";
        String expected = "src/test/resources/expected3.txt";
        String actual = "src/test/resources/output3.txt";
        TailLauncher.main(cmd.split(" "));
        TailLauncher tail = new TailLauncher();
        assertEquals(tail.readFile(expected), tail.readFile(actual));
    }
    // строк <10 и нет флага
    @Test
    public void tailNoFlagTest() throws IOException {
        String cmd = "-o src/test/resources/output4.txt src/test/resources/input4.txt";
        String expected = "src/test/resources/expected4.txt";
        String actual = "src/test/resources/output4.txt";
        TailLauncher.main(cmd.split(" "));
        TailLauncher tail = new TailLauncher();
        assertEquals(tail.readFile(expected), tail.readFile(actual));
    }
    // строк >10 и нет флага
    @Test
    public void tailNoFlagTest1() throws IOException {
        String cmd = "-o src/test/resources/output5.txt src/test/resources/input5.txt";
        String expected = "src/test/resources/expected5.txt";
        String actual = "src/test/resources/output5.txt";
        TailLauncher.main(cmd.split(" "));
        TailLauncher tail = new TailLauncher();
        assertEquals(tail.readFile(expected), tail.readFile(actual));
    }
    //несколько входных файлов
    @Test
    public void tailManyInputNames() throws IOException {
        String cmd = "-n 3 -o src/test/resources/output6.txt src/test/resources/input61.txt src/test/resources/input62.txt";
        String expected = "src/test/resources/expected6.txt";
        String actual = "src/test/resources/output6.txt";
        TailLauncher.main(cmd.split(" "));
        TailLauncher tail = new TailLauncher();
        assertEquals(tail.readFile(expected), tail.readFile(actual));
    }
    //оба флага вместе
    @Test
    public void tailBothFlagsTest() throws IOException {
        String cmd = "-n 3 -c 5 -o src/test/resources/output7.txt src/test/resources/input61.txt";
        String expected = "src/test/resources/expected6.txt";
        String actual = "src/test/resources/output6.txt";
        TailLauncher.main(cmd.split(" "));
        TailLauncher tail = new TailLauncher();
        assertEquals(tail.readFile(expected), tail.readFile(actual));
    }
}